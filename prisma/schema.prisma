// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  ROOT
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String?
  firstName     String?
  lastName      String?
  role          Role     @default(USER)
  recoveryToken String?  @unique
  companyId     Int?
  company       Company? @relation(fields: [companyId], references: [id])
  reports       Report[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("users")
}

model Company {
  id                    Int      @id @default(autoincrement())
  name                  String   @unique
  phoneOfRepresentative String?
  emailOfRepresentative String?
  users                 User[]
  reports               Report[]
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("companies")
}

model Report {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  pages       ReportPage[]
  company     Company     @relation(fields: [companyId], references: [id])
  companyId   Int
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("reports")
}

model ReportPage {
  id       Int          @id @default(autoincrement())
  name     String
  fields   ReportField[]
  report   Report       @relation(fields: [reportId], references: [id], onDelete: Cascade)
  reportId Int

  @@map("report_pages")
}

model ReportField {
  id         Int        @id @default(autoincrement())
  type       String
  label      String
  required   Boolean    @default(false)
  align      String     @default("start")
  bold       Boolean    @default(false)
  italic     Boolean    @default(false)
  underline  Boolean    @default(false)
  value      String?
  bgColor    String?    @default("")
  fontColor  String?    @default("")
  fontSize   Int        @default(16)
  height     String?    @default("")
  width      String?    @default("")
  margin     String?    @default("")
  tableConfig Json?     // Stores table configuration (columns and rowCount)
  page       ReportPage @relation(fields: [pageId], references: [id], onDelete: Cascade)
  pageId     Int

  @@map("report_fields")
}
